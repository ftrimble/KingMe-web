<%- model_class = Ride -%>
<div class="page-header">
  <h1><%= (@ride.name && !@ride.name.empty?) ? @ride.name : "Ride" %></h1>
</div>
<div class="col-lg-8">
  <%= track_id_to_js(@ride.id) if @ride %>
  <script type="text/javascript">
var calc_bounds, display_on_map, gm_init, load_track;

// Initialize a Google Map Canvas
gm_init = function() {
  var gm_center, gm_map_type, map_options;
  gm_center = new google.maps.LatLng(42.7478, -73.6049);
  gm_map_type = google.maps.MapTypeId.ROADMAP;
  map_options = {
center: gm_center,
        zoom: 12,
        mapTypeId: gm_map_type
  };
  return new google.maps.Map(this.map_canvas, map_options);
};

// Initialize map when window has loaded
$(window.onload=function() {
    var map;
    map = gm_init();
    return load_track(js_track_id, map);
    });

// Load track info from JSON output
load_track = function(id, map) {
  var callback;
  callback = function(data) {
    return display_on_map(data, map);
  };
  return $.get('/rides/' + id + '.json', {}, callback, 'json');
};

// Draw polylines on map
display_on_map = function(data, map) {
  var decoded_path, path_options, track_path;
  decoded_path = google.maps.geometry.encoding.decodePath(data.polyline);
  path_options = {
path: decoded_path,
      strokeColor: "#FFA500",
      strokeOpacity: 0.5,
      strokeWeight: 5
  };
  track_path = new google.maps.Polyline(path_options);
  track_path.setMap(map);

  return map.fitBounds(calc_bounds(track_path));
};

// Calculate bounds
calc_bounds = function(track_path) {
  var b, gm_path, i, map, path_length;
  b = new google.maps.LatLngBounds();
  gm_path = track_path.getPath();
  path_length = gm_path.getLength();
  i = [0, (path_length / 3).toFixed(0), (path_length / 3).toFixed(0) * 2];
  b.extend(gm_path.getAt(i[0]));
  b.extend(gm_path.getAt(i[1]));
  b.extend(gm_path.getAt(i[2]));
};

  </script>

  <!-- Dislpay File Info -->
  <dl class="dl-horizontal">
    <dt><strong><%= model_class.human_attribute_name(:gpx_file_name) %>:</strong></dt>
    <dd><%= @ride.gpx_file_name %></dd>
    <dt><strong><%= model_class.human_attribute_name(:gpx_content_type) %>:</strong></dt>
    <dd><%= @ride.gpx_content_type %></dd>
    <dt><strong><%= model_class.human_attribute_name(:gpx_file_size) %>:</strong></dt>
    <dd><%= @ride.gpx_file_size %> (Bytes)</dd>
    <dt><strong><%= model_class.human_attribute_name(:gpx_updated_at) %>:</strong></dt>
    <dd><%= @ride.gpx_updated_at %></dd>
  </dl>

  <!-- Dislpay Action Buttons -->
  <div class="form-actions">
    <%= link_to t('.back', :default => t("helpers.links.back")),
      rides_path, :class => 'btn btn-info'  %>
    <%= link_to t('.edit', :default => t("helpers.links.edit")),
      edit_ride_path(@ride), :class => 'btn btn-info' %>
    <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
      ride_path(@ride),
      :method => 'delete',
      :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
      :class => 'btn btn-danger' %>
    <br><br>
      <!-- Map Canvas -->
      <div id="map_canvas" style="height: 600px;"/>
      </div>
    </div>
  </div>

  <!-- Dislpay Goals on separate Column-->
  <div class="col-md-4">
    <h1> User Goals </h1>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Time</th>
          <th>Completed?</th>
        </tr>
      </thead>
      <tbody>
      <% @ride.goals.where(user_id: 1).each do |goal| %>
        <tr>
        <td><%= goal.time %></td>
        <td><%= (goal.completed) ? "Yes" : "No" %></td>
      </tr>
    <% end %>
      </tbody>
    </table> 
    <%= link_to t('.create', :default => t("Create Goal")),
      new_goal_path(ride_id: @ride.id), :class => 'btn btn-success'  %>

    </div>
  </div>
